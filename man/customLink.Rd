% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmcInternals.R
\name{customLink}
\alias{customLink}
\title{Function to Define a Custom Link Function}
\usage{
customLink(func, invfunc, nimbleImp)
}
\arguments{
\item{func}{A function with one argument that applies the link function to
that argument}

\item{invfunc}{A function with one argument that applies the inverse of the
link function to that argument}

\item{nimbleImp}{A function with two arguments. The first argument is a
character scalar of an output node in NIMBLE that contains the mean value
of the response variable that is the subject of the regression model and the
second argument is the text containing the linear model specification. The
function returns a character scalar containing the text of the NIMBLE code
specification relating the mean value to the linear model specification.}
}
\value{
A list of containing the following named elements:
\describe{
\item{\code{func}}{A version of the function of the \code{func} argument
encapsulated such that it has an interface usable by the package}
\item{\code{invfunv}}{A version of the function of the \code{invfunc}
argument encapsulated such that it has an interface usable by the package}
\item{\code{nimbleImp}}{A version of the function of the \code{nimbleImp}
argument encapsulated such that is has an interface usable by the package}
}
}
\description{
A function to allow for the definition of custom or non-standard
link functions for use in generalized linear models
}
\examples{
# Example of using the custom link function to implement the standard
# log link function

# 1. Define a function that creates the NIMBLE model specification using the
# link function. The function has two arguments: 'outNodeText' which is the
# text containing the name of the output node containing the mean value
# which is the response of the regression model, 'expFormText' which is the
# text containing the linear model specification
nimbleLinkSpec <- function(outNodeText, expFormText) {
  paste0("log(", outNodeText, ") <- ", expFormText)
}
# so for example:
nimbleLinkSpec("meanValue[iter]", "intercept + coefficient * covariate[iter]")
# will give "log(meanValue[iter]) <- intercept + coefficient * covariate[iter]"

# 2. Use the NIMBLE link specification function alongside the R
# implementation of the link function and its inverse to produce a custom
# link function that is usable by the package
customLink(log, exp, nimbleLinkSpec)


}
\seealso{
\code{\link[nimble]{nimbleCode}}
}
\author{
Joseph D. Chipperfield, \email{joechip90@googlemail.com}
}
