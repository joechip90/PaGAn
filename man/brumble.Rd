% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brumble.R
\name{brumble}
\alias{brumble}
\title{Run inlabru within NIMBLE}
\usage{
brumble(
  components = ~Intercept(1),
  ...,
  options = list(),
  .envir = parent.frame(),
  suffix = "",
  mcCores = 1
)
}
\arguments{
\item{components}{A \code{formula}-like specification of latent components.
Also used to define a default linear additive predictor. See
\code{\link[inlabru]{component}} for details.}

\item{...}{Likelihoods, each constructed by calling
\code{\link[inlabru]{like}}, or named parameters that can be passed to a
single \code{\link[inlabru]{like}} call. Note that all the arguments will be
evaluated before calling \code{\link[inlabru]{like}} to detect if they are
\code{like} objects. This means that special arguments that need to be
evaluated in the context of \code{response_data} or \code{data} (such as
\code{Ntrials}) may only work that way in direct calls to
\code{\link[inlabru]{like}}. \code{...} may also contain arguments to pass to
NIMBLE's constituent model building and specification functions
(\code{\link[nimble]{nimbleModel}}, \code{\link[nimble]{configureMCMC}},
\code{\link[nimble]{compileNimble}}, and \code{\link[nimble]{runMCMC}}).
NIMBLE arguments that share names with the \code{\link[inlabru]{like}}
function arguments (\code{data} for example) can be prefixed with
\code{nimble.} to ensure they are passed to NIMBLE's constituent functions.}

\item{options}{A \code{\link[inlabru]{bru_options}} options object or a list
of options passed on to \code{\link[inlabru]{bru_options}}.}

\item{.envir}{Environment for component evaluation (for when a non-formula
specification is used).}

\item{suffix}{A character scalar that will be appended to all variables used
in the NIMBLE code (including constants and data)}

\item{mcCores}{An integer scalar giving the number of cores to distribute the
chains between. A value of \code{NA} sets the number of cores to be equal to
the number available on the system}
}
\description{
An interface to extend the number of hierarchical models that
the \code{\link[inlabru]{bru}} function can support by nesting the INLA calls
within MCMC
}
\seealso{
\code{\link[nimble]{configureMCMC}}, \code{\link[nimble]{runMCMC}},
\code{\link[nimble]{nimbleModel}}, \code{\link[nimble]{compileNimble}},
\code{\link[nimble]{buildMCMC}}, \code{\link[nimble]{nimbleCode}},
\code{\link{modelDefinitionToNIMBLE}}, \code{\link{mcmcNIMBLERun}},
\code{\link[inlabru]{component}}, \code{\link[inlabru]{bru}},
\code{\link[inlabru]{like}}, \code{\link[inlabru]{bru_options}}
}
\author{
Joseph D. Chipperfield, \email{joechip90@googlemail.com}
}
